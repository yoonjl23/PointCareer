import 'package:flutter/material.dart';
import 'package:pc/screens/Phoneauth_screens.dart';
import 'package:pc/screens/Terms_screens.dart';

class SignupScreens extends StatefulWidget {
  const SignupScreens({super.key});

  @override
  State<SignupScreens> createState() => _SignupScreensState();
}

class _SignupScreensState extends State<SignupScreens> {
  final TextEditingController nameController = TextEditingController();
  final TextEditingController idController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final TextEditingController confirmPasswordController =
      TextEditingController();

  String? passwordError;
  final _formKey = GlobalKey<FormState>();

  void _goToTermsPage() {
    final name = nameController.text.trim();
    final id = idController.text.trim();
    final password = passwordController.text.trim();
    final confirmPassword = confirmPasswordController.text.trim();

    setState(() {
      passwordError = null;
    });

    // üîç ÎîîÎ≤ÑÍπÖÏö© Ï∂úÎ†•
    print('üß™ ÏûÖÎ†•Ìïú ÎπÑÎ∞ÄÎ≤àÌò∏: $password');
    print('üß™ ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏: $confirmPassword');

    if (_formKey.currentState!.validate()) {
      if (password != confirmPassword) {
        setState(() {
          passwordError = 'ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§.';
        });
        print('‚ùå ÎπÑÎ∞ÄÎ≤àÌò∏ Î∂àÏùºÏπò');
        return;
      }

      print('‚úÖ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏùºÏπò');

      // ÏïΩÍ¥Ä ÌôîÎ©¥ ‚Üí ÎèôÏùòÌïòÎ©¥ Ïù∏Ï¶ù ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => TermsScreens(
            onAgree: () {
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(
                  builder: (context) =>
                      PhoneauthScreens(id: id, password: password, name: name,),
                ),
              );
            },
          ),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        automaticallyImplyLeading: true,
        backgroundColor: const Color(0xFFF2F2F2),
        elevation: 0,
      ),
      backgroundColor: const Color(0xFFF2F2F2),
      body: SingleChildScrollView(
        padding: const EdgeInsets.symmetric(vertical: 30),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const SizedBox(height: 70),
              const Padding(
                padding: EdgeInsets.symmetric(horizontal: 19),
                child: Text(
                  "ÌöåÏõêÍ∞ÄÏûÖ",
                  style: TextStyle(
                    fontSize: 24,
                    fontFamily: 'Roboto',
                    fontWeight: FontWeight.w600,
                    color: Color(0xFF262626),
                  ),
                ),
              ),
              const SizedBox(height: 50),

              // Ïù¥Î¶Ñ ÏûÖÎ†•
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20),
                child: SizedBox(
                  width: 372,
                  height: 60,
                  child: TextFormField(
                    controller: nameController,
                    validator: (value) => value == null || value.trim().isEmpty
                        ? 'Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî'
                        : null,
                    decoration: InputDecoration(
                      hintText: 'ÍπÄÍ≤ΩÍ∏∞',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                      filled: true,
                      fillColor: Colors.white,
                    ),
                  ),
                ),
              ),

              // ÏïÑÏù¥Îîî ÏûÖÎ†•
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20),
                child: SizedBox(
                  width: 372,
                  height: 60,
                  child: TextFormField(
                    controller: idController,
                    validator: (value) => value == null || value.trim().isEmpty
                        ? 'ÏïÑÏù¥ÎîîÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî'
                        : null,
                    decoration: InputDecoration(
                      hintText: 'kyonggi',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                      filled: true,
                      fillColor: Colors.white,
                    ),
                  ),
                ),
              ),

              // ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20),
                child: SizedBox(
                  width: 372,
                  height: 60,
                  child: TextFormField(
                    controller: passwordController,
                    validator: (value) => value == null || value.trim().isEmpty
                        ? 'ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî'
                        : null,
                    decoration: InputDecoration(
                      hintText: 'ÏòÅÎ¨∏, Ïà´Ïûê, ÌäπÏàòÎ¨∏Ïûê Ìè¨Ìï® 8Ïûê Ïù¥ÏÉÅ',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                      filled: true,
                      fillColor: Colors.white,
                    ),
                    obscureText: true,
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 24),
                child: const Text(
                  'ÏòÅÎ¨∏ ÎåÄÏÜåÎ¨∏Ïûê/Ïà´Ïûê/ÌäπÏàòÎ¨∏Ïûê Ï§ë 2Í∞ÄÏßÄ Ïù¥ÏÉÅ Ï°∞Ìï©, 8Ïûê~32Ïûê',
                  style: TextStyle(
                    fontSize: 14,
                    fontFamily: "Roboto",
                    fontWeight: FontWeight.w400,
                    color: Color(0xFFC4C4C4),
                  ),
                ),
              ),

              const SizedBox(height: 50),

              // ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏ ÏûÖÎ†•
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20),
                child: SizedBox(
                  width: 372,
                  height: 60,
                  child: TextFormField(
                    controller: confirmPasswordController,
                    validator: (value) => value == null || value.trim().isEmpty
                        ? 'ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî'
                        : null,
                    decoration: InputDecoration(
                      hintText: 'ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÌôïÏù∏',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                      filled: true,
                      fillColor: Colors.white,
                    ),
                    obscureText: true,
                  ),
                ),
              ),

              if (passwordError != null)
                Padding(
                  padding: const EdgeInsets.only(left: 25.0, top: 5),
                  child: Text(
                    passwordError!,
                    style: const TextStyle(color: Colors.red, fontSize: 14),
                  ),
                ),

              const SizedBox(height: 150),

              // Îã§Ïùå Î≤ÑÌäº
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 15),
                child: SizedBox(
                  width: 372,
                  height: 60,
                  child: ElevatedButton(
                    onPressed: _goToTermsPage,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: const Color(0xFFBBDFFF),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10),
                      ),
                    ),
                    child: const Text(
                      'Îã§Ïùå',
                      style: TextStyle(fontSize: 24, color: Color(0xFF1877DD)),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
